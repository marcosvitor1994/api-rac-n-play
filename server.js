require('dotenv').config();
const app = require('./src/app');
const { testConnection } = require('./src/config/database');

const PORT = process.env.PORT || 5000;

/**
 * Inicia o servidor
 */
const startServer = async () => {
  try {
    // Testa a conex√£o com o banco de dados
    const isConnected = await testConnection();
    
    if (!isConnected) {
      console.error('‚ùå Falha ao conectar com o banco de dados. Servidor n√£o iniciado.');
      process.exit(1);
    }

    // Inicia o servidor Express
    app.listen(PORT, () => {
      console.log('\n========================================');
      console.log(`üöÄ Servidor rodando na porta ${PORT}`);
      console.log(`üì° URL: http://localhost:${PORT}`);
      console.log(`üîó API: http://localhost:${PORT}/api`);
      console.log('========================================\n');
    });
  } catch (error) {
    console.error('‚ùå Erro ao iniciar o servidor:', error);
    process.exit(1);
  }
};

// Tratamento de erros n√£o capturados
process.on('unhandledRejection', (err) => {
  console.error('‚ùå Erro n√£o tratado (Rejection):', err);
  process.exit(1);
});

process.on('uncaughtException', (err) => {
  console.error('‚ùå Erro n√£o tratado (Exception):', err);
  process.exit(1);
});

// Graceful shutdown
process.on('SIGTERM', () => {
  console.log('‚ö†Ô∏è  SIGTERM recebido. Encerrando servidor...');
  process.exit(0);
});

process.on('SIGINT', () => {
  console.log('\n‚ö†Ô∏è  SIGINT recebido. Encerrando servidor...');
  process.exit(0);
});

// Inicia o servidor
startServer();